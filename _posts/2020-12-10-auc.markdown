---
layout: post
title:  "AUC 的具体含义"
date:   2020-12-10 00:04:00 -0800
categories: algorithm
---
AUC 的定义是 ROC 曲线下的面积，用来衡量二分类模型的排序能力，它所表达的具体含义是随机获取一个
正样本和一个负样本，正样本的预测值大于负样本的预测值的概率。

# 定义

给定 $$ N $$ 个 $$ \left ( x_i, y_i \right ) $$, 其中 $$ y_i \in \{0, 1\} $$，
如果我们用一个模型去预测每个 $$ x_i $$，即 $$ \{x_i, \hat{y_i}\} $$。那么对于
$$ \{y_i, \hat{y_i}\} $$，我们可以计算出一些指标来衡量这个模型的质量，其中一个重要的
指标便是 [AUC][auc-link]，它的值等于 ROC 曲线下的面积。

当给定一个 $$ t $$，我们可以根据 $$ \hat{y} $$ 是否大于 $$ t $$ 来预测正负样例，
从而计算得到 $$ \left (FPR(t), TPR(t) \right ) $$ 这样一个点。接着通过枚举 $$ t $$，
便绘制出 ROC 曲线。换句话说， ROC 曲线的横坐标是

$$ FPR(t) = \frac{FP}{(FP + TN)}, $$

纵坐标是

$$ TPR(t) = \frac{TP}{(TP + FN)}. $$

值得注意的是，纵坐标也就是 Recall 的定义。

AUC 具备以下[特性][auc-property-link]：

- 尺度不变性： AUC 会受预测的相对大小影响，而不会收到预测的绝对值大小影响；
- 分类 threshold 不变形： AUC 不是定义在某个预测 threshold 上的指标。

以及以下局限性：

- 由于尺度不变性，无法知道绝对准度，需要通过其他指标来获取；
- 在某些场景中需要指定 threshold, 如 spam 检测一般尽量降低 FP，即使会增加一定的 FN；
- AUC 只对二分类问题有效，所以对于回归问题（label 是浮点型），我们一般会设定 $$ t $$，通过
$$ y $$ 是否大于 $$ t $$ 将样例划分成正负样例，从而转换成二分类问题。

根据 AUC 以上的定义，它来衡量排序状况的性质并不显然，下面给出证明以及对应的验证。

# 证明

首先定义以下两个随机变量

- $$ x_+ $$ 表示当 $$ y $$ 为 $$ 1 $$ 时，对应的 $$ \hat{y} $$
- $$ x_- $$ 表示当 $$ y $$ 为 $$ 0 $$ 时，对应的 $$ \hat{y} $$

将 $$ x_+ $$ 以及 $$ x_- $$ 的概率密度函数分别定义为 $$ f_+(x) $$ 与 $$ f_-(x) $$，则有

$$ f_+(x) = P \left( \hat{y} \vert y=1 \right), $$

$$ f_-(x) = P \left( \hat{y} \vert y=0 \right), $$

那么，当给定一个 $$ t $$ 之后

$$ FPR(t) = \int_{t}^{+\infty}f_-(x)dx = 1 - F_-(x), $$

$$ TPR(t) = \int_{t}^{+\infty}f_+(x)dx = 1 - F_+(x). $$

根据以上，我们可以得到

$$
\begin{align}
AUC &= \int_{0}^{1}TPR(t) * d(FPR(t))\\
    &= \int_{-\infty}^{+\infty}(1 - F_+(t)) * f_-(t)dt\\
    &= P(x_+ > x_-).\\
\end{align}
$$

任选一个正样例和一个负样例，正样例的预测值大于负样例的预测值的概率，便是该条件概率
$$ P(x_+ > x_-) $$，严谨的形式化推导见[这里][auc-blog-link]。

以上是普适情况的公式，而离散形式下，一种计算方式是

$$ AUC = \frac {\sum_{i \in \{y_i=1\}} \sum_{j \in \{y_j=0\}} I(i, j)} {|\{y_i=1\}| * |\{y_i=0\}|}, $$

其中

$$
I(i, j) = \left\{ \begin{array}{ll}
   1.0 & \quad \hat{y_i} > \hat{y_j} \\
   0.5 & \quad \hat{y_i} = \hat{y_j} \\
   0.0 & \quad \hat{y_i} < \hat{y_j} \\
\end{array} \right.
$$

# 验证

以下手动随机了一个样例测试离散形式的 AUC 计算与 sklearn 库调用的结果一致。

{% highlight python %}
import numpy as np
from sklearn import metrics

vy = [0, 0, 0, 0, 0, 1, 1, 1, 1]
vh = [0.1, 0.2, 0.3, 0.4, 0.5, 0.3, 0.6, 0.7, 0.5]

auc = 0
nm = 0
for i in range(len(vy)):
  for j in range(len(vy)):
    if vy[i] == 1 and vy[j] == 0:
      nm += 1
      if vh[i] > vh[j]:
        auc += 1.0
      elif vh[i] == vh[j]:
        auc += 0.5
auc /= nm
print(auc)
# 0.85

y = np.array(vy)
h = np.array(vh)
fpr, tpr, thresholds = metrics.roc_curve(y, h, pos_label=1)
print(metrics.auc(fpr, tpr))
# 0.85
{% endhighlight %}

[auc-link]: https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_the_curve
[auc-blog-link]: https://www.alexejgossmann.com/auc/
[auc-property-link]: https://developers.google.com/machine-learning/crash-course/classification/roc-and-auc
